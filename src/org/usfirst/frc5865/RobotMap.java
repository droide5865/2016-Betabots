// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5865;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Ultrasonic;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon driveTrainCANTalonDriveLF;
    public static CANTalon driveTrainCANTalonDriveLR;
    public static CANTalon driveTrainCANTalonDriveRF;
    public static CANTalon driveTrainCANTalonDriveRR;
    public static RobotDrive driveTrainRobotDrive;
    
    public static CANTalon pinceCANTalonDrive;
	public static DoubleSolenoid pinceDoubleSolenoid;

	public static void init() {
    	
    	// Declaration des moteur pour la conduite du robot
    	driveTrainCANTalonDriveRF = new CANTalon(1);
        LiveWindow.addActuator("Drive", "CANTalonDriveRF", driveTrainCANTalonDriveRF);
        
        driveTrainCANTalonDriveRR = new CANTalon(2);
        LiveWindow.addActuator("Drive", "CANTalonDriveRR", driveTrainCANTalonDriveRR);
        
        driveTrainCANTalonDriveLR = new CANTalon(4);
        LiveWindow.addActuator("Drive", "CANTalonDriveLR", driveTrainCANTalonDriveLR);

        driveTrainCANTalonDriveLF = new CANTalon(5);
        LiveWindow.addActuator("Drive", "CANTalonDriveLF", driveTrainCANTalonDriveLF);
        
        driveTrainRobotDrive = new RobotDrive(driveTrainCANTalonDriveLF, 
        									  driveTrainCANTalonDriveLR,
        									  driveTrainCANTalonDriveRF, 
        									  driveTrainCANTalonDriveRR);
        
        // Necessaire pour indiquer le sens de rotation de moteur. 
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);

        // Declaration du moteur de l'actuateur de la pince
        pinceCANTalonDrive = new CANTalon(3);
        LiveWindow.addActuator("Pince", "CANTalonPince", pinceCANTalonDrive);
        
        // Declaration du solenoid de la pince
        pinceDoubleSolenoid = new DoubleSolenoid(0, 1);
        LiveWindow.addActuator("Pince", "DoubleSolenoid", pinceDoubleSolenoid);
    }
}
